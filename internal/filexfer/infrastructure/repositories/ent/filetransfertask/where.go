// Code generated by ent, DO NOT EDIT.

package filetransfertask

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/shiqinfeng1/goframe-ddd/internal/filexfer/infrastructure/repositories/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldID, id))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldTaskID, v))
}

// TaskName applies equality check predicate on the "task_name" field. It's identical to TaskNameEQ.
func TaskName(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldTaskName, v))
}

// NodeID applies equality check predicate on the "node_id" field. It's identical to NodeIDEQ.
func NodeID(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldNodeID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldStatus, v))
}

// Elapsed applies equality check predicate on the "elapsed" field. It's identical to ElapsedEQ.
func Elapsed(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldElapsed, v))
}

// Speed applies equality check predicate on the "speed" field. It's identical to SpeedEQ.
func Speed(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldSpeed, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldCreatedAt, v))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDContains applies the Contains predicate on the "task_id" field.
func TaskIDContains(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContains(FieldTaskID, v))
}

// TaskIDHasPrefix applies the HasPrefix predicate on the "task_id" field.
func TaskIDHasPrefix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasPrefix(FieldTaskID, v))
}

// TaskIDHasSuffix applies the HasSuffix predicate on the "task_id" field.
func TaskIDHasSuffix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasSuffix(FieldTaskID, v))
}

// TaskIDEqualFold applies the EqualFold predicate on the "task_id" field.
func TaskIDEqualFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEqualFold(FieldTaskID, v))
}

// TaskIDContainsFold applies the ContainsFold predicate on the "task_id" field.
func TaskIDContainsFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContainsFold(FieldTaskID, v))
}

// TaskNameEQ applies the EQ predicate on the "task_name" field.
func TaskNameEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldTaskName, v))
}

// TaskNameNEQ applies the NEQ predicate on the "task_name" field.
func TaskNameNEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldTaskName, v))
}

// TaskNameIn applies the In predicate on the "task_name" field.
func TaskNameIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldTaskName, vs...))
}

// TaskNameNotIn applies the NotIn predicate on the "task_name" field.
func TaskNameNotIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldTaskName, vs...))
}

// TaskNameGT applies the GT predicate on the "task_name" field.
func TaskNameGT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldTaskName, v))
}

// TaskNameGTE applies the GTE predicate on the "task_name" field.
func TaskNameGTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldTaskName, v))
}

// TaskNameLT applies the LT predicate on the "task_name" field.
func TaskNameLT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldTaskName, v))
}

// TaskNameLTE applies the LTE predicate on the "task_name" field.
func TaskNameLTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldTaskName, v))
}

// TaskNameContains applies the Contains predicate on the "task_name" field.
func TaskNameContains(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContains(FieldTaskName, v))
}

// TaskNameHasPrefix applies the HasPrefix predicate on the "task_name" field.
func TaskNameHasPrefix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasPrefix(FieldTaskName, v))
}

// TaskNameHasSuffix applies the HasSuffix predicate on the "task_name" field.
func TaskNameHasSuffix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasSuffix(FieldTaskName, v))
}

// TaskNameEqualFold applies the EqualFold predicate on the "task_name" field.
func TaskNameEqualFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEqualFold(FieldTaskName, v))
}

// TaskNameContainsFold applies the ContainsFold predicate on the "task_name" field.
func TaskNameContainsFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContainsFold(FieldTaskName, v))
}

// NodeIDEQ applies the EQ predicate on the "node_id" field.
func NodeIDEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldNodeID, v))
}

// NodeIDNEQ applies the NEQ predicate on the "node_id" field.
func NodeIDNEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldNodeID, v))
}

// NodeIDIn applies the In predicate on the "node_id" field.
func NodeIDIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldNodeID, vs...))
}

// NodeIDNotIn applies the NotIn predicate on the "node_id" field.
func NodeIDNotIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldNodeID, vs...))
}

// NodeIDGT applies the GT predicate on the "node_id" field.
func NodeIDGT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldNodeID, v))
}

// NodeIDGTE applies the GTE predicate on the "node_id" field.
func NodeIDGTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldNodeID, v))
}

// NodeIDLT applies the LT predicate on the "node_id" field.
func NodeIDLT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldNodeID, v))
}

// NodeIDLTE applies the LTE predicate on the "node_id" field.
func NodeIDLTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldNodeID, v))
}

// NodeIDContains applies the Contains predicate on the "node_id" field.
func NodeIDContains(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContains(FieldNodeID, v))
}

// NodeIDHasPrefix applies the HasPrefix predicate on the "node_id" field.
func NodeIDHasPrefix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasPrefix(FieldNodeID, v))
}

// NodeIDHasSuffix applies the HasSuffix predicate on the "node_id" field.
func NodeIDHasSuffix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasSuffix(FieldNodeID, v))
}

// NodeIDEqualFold applies the EqualFold predicate on the "node_id" field.
func NodeIDEqualFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEqualFold(FieldNodeID, v))
}

// NodeIDContainsFold applies the ContainsFold predicate on the "node_id" field.
func NodeIDContainsFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContainsFold(FieldNodeID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldStatus, v))
}

// ElapsedEQ applies the EQ predicate on the "elapsed" field.
func ElapsedEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldElapsed, v))
}

// ElapsedNEQ applies the NEQ predicate on the "elapsed" field.
func ElapsedNEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldElapsed, v))
}

// ElapsedIn applies the In predicate on the "elapsed" field.
func ElapsedIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldElapsed, vs...))
}

// ElapsedNotIn applies the NotIn predicate on the "elapsed" field.
func ElapsedNotIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldElapsed, vs...))
}

// ElapsedGT applies the GT predicate on the "elapsed" field.
func ElapsedGT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldElapsed, v))
}

// ElapsedGTE applies the GTE predicate on the "elapsed" field.
func ElapsedGTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldElapsed, v))
}

// ElapsedLT applies the LT predicate on the "elapsed" field.
func ElapsedLT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldElapsed, v))
}

// ElapsedLTE applies the LTE predicate on the "elapsed" field.
func ElapsedLTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldElapsed, v))
}

// ElapsedContains applies the Contains predicate on the "elapsed" field.
func ElapsedContains(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContains(FieldElapsed, v))
}

// ElapsedHasPrefix applies the HasPrefix predicate on the "elapsed" field.
func ElapsedHasPrefix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasPrefix(FieldElapsed, v))
}

// ElapsedHasSuffix applies the HasSuffix predicate on the "elapsed" field.
func ElapsedHasSuffix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasSuffix(FieldElapsed, v))
}

// ElapsedEqualFold applies the EqualFold predicate on the "elapsed" field.
func ElapsedEqualFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEqualFold(FieldElapsed, v))
}

// ElapsedContainsFold applies the ContainsFold predicate on the "elapsed" field.
func ElapsedContainsFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContainsFold(FieldElapsed, v))
}

// SpeedEQ applies the EQ predicate on the "speed" field.
func SpeedEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldSpeed, v))
}

// SpeedNEQ applies the NEQ predicate on the "speed" field.
func SpeedNEQ(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldSpeed, v))
}

// SpeedIn applies the In predicate on the "speed" field.
func SpeedIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldSpeed, vs...))
}

// SpeedNotIn applies the NotIn predicate on the "speed" field.
func SpeedNotIn(vs ...string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldSpeed, vs...))
}

// SpeedGT applies the GT predicate on the "speed" field.
func SpeedGT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldSpeed, v))
}

// SpeedGTE applies the GTE predicate on the "speed" field.
func SpeedGTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldSpeed, v))
}

// SpeedLT applies the LT predicate on the "speed" field.
func SpeedLT(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldSpeed, v))
}

// SpeedLTE applies the LTE predicate on the "speed" field.
func SpeedLTE(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldSpeed, v))
}

// SpeedContains applies the Contains predicate on the "speed" field.
func SpeedContains(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContains(FieldSpeed, v))
}

// SpeedHasPrefix applies the HasPrefix predicate on the "speed" field.
func SpeedHasPrefix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasPrefix(FieldSpeed, v))
}

// SpeedHasSuffix applies the HasSuffix predicate on the "speed" field.
func SpeedHasSuffix(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldHasSuffix(FieldSpeed, v))
}

// SpeedEqualFold applies the EqualFold predicate on the "speed" field.
func SpeedEqualFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEqualFold(FieldSpeed, v))
}

// SpeedContainsFold applies the ContainsFold predicate on the "speed" field.
func SpeedContainsFold(v string) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldContainsFold(FieldSpeed, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FileTransferTask) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FileTransferTask) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FileTransferTask) predicate.FileTransferTask {
	return predicate.FileTransferTask(sql.NotPredicates(p))
}
