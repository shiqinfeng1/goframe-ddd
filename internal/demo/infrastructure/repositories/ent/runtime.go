// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/filetransfertask"
	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/recvchunk"
	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/recvfile"
	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/schema"
	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/sendchunk"
	"github.com/shiqinfeng1/goframe-ddd/internal/demo/infrastructure/repositories/ent/sendfile"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	filetransfertaskFields := schema.FileTransferTask{}.Fields()
	_ = filetransfertaskFields
	// filetransfertaskDescTaskID is the schema descriptor for task_id field.
	filetransfertaskDescTaskID := filetransfertaskFields[0].Descriptor()
	// filetransfertask.TaskIDValidator is a validator for the "task_id" field. It is called by the builders before save.
	filetransfertask.TaskIDValidator = func() func(string) error {
		validators := filetransfertaskDescTaskID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(task_id string) error {
			for _, fn := range fns {
				if err := fn(task_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// filetransfertaskDescTaskName is the schema descriptor for task_name field.
	filetransfertaskDescTaskName := filetransfertaskFields[1].Descriptor()
	// filetransfertask.TaskNameValidator is a validator for the "task_name" field. It is called by the builders before save.
	filetransfertask.TaskNameValidator = filetransfertaskDescTaskName.Validators[0].(func(string) error)
	// filetransfertaskDescNodeID is the schema descriptor for node_id field.
	filetransfertaskDescNodeID := filetransfertaskFields[2].Descriptor()
	// filetransfertask.NodeIDValidator is a validator for the "node_id" field. It is called by the builders before save.
	filetransfertask.NodeIDValidator = filetransfertaskDescNodeID.Validators[0].(func(string) error)
	// filetransfertaskDescStatus is the schema descriptor for status field.
	filetransfertaskDescStatus := filetransfertaskFields[3].Descriptor()
	// filetransfertask.DefaultStatus holds the default value on creation for the status field.
	filetransfertask.DefaultStatus = filetransfertaskDescStatus.Default.(int)
	// filetransfertaskDescElapsed is the schema descriptor for elapsed field.
	filetransfertaskDescElapsed := filetransfertaskFields[4].Descriptor()
	// filetransfertask.DefaultElapsed holds the default value on creation for the elapsed field.
	filetransfertask.DefaultElapsed = filetransfertaskDescElapsed.Default.(string)
	// filetransfertask.ElapsedValidator is a validator for the "elapsed" field. It is called by the builders before save.
	filetransfertask.ElapsedValidator = filetransfertaskDescElapsed.Validators[0].(func(string) error)
	// filetransfertaskDescSpeed is the schema descriptor for speed field.
	filetransfertaskDescSpeed := filetransfertaskFields[5].Descriptor()
	// filetransfertask.DefaultSpeed holds the default value on creation for the speed field.
	filetransfertask.DefaultSpeed = filetransfertaskDescSpeed.Default.(string)
	// filetransfertask.SpeedValidator is a validator for the "speed" field. It is called by the builders before save.
	filetransfertask.SpeedValidator = filetransfertaskDescSpeed.Validators[0].(func(string) error)
	// filetransfertaskDescUpdatedAt is the schema descriptor for updated_at field.
	filetransfertaskDescUpdatedAt := filetransfertaskFields[6].Descriptor()
	// filetransfertask.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	filetransfertask.DefaultUpdatedAt = filetransfertaskDescUpdatedAt.Default.(func() time.Time)
	// filetransfertask.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	filetransfertask.UpdateDefaultUpdatedAt = filetransfertaskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// filetransfertaskDescCreatedAt is the schema descriptor for created_at field.
	filetransfertaskDescCreatedAt := filetransfertaskFields[7].Descriptor()
	// filetransfertask.DefaultCreatedAt holds the default value on creation for the created_at field.
	filetransfertask.DefaultCreatedAt = filetransfertaskDescCreatedAt.Default.(func() time.Time)
	recvchunkFields := schema.RecvChunk{}.Fields()
	_ = recvchunkFields
	// recvchunkDescChunkIndex is the schema descriptor for chunk_index field.
	recvchunkDescChunkIndex := recvchunkFields[1].Descriptor()
	// recvchunk.DefaultChunkIndex holds the default value on creation for the chunk_index field.
	recvchunk.DefaultChunkIndex = recvchunkDescChunkIndex.Default.(int)
	// recvchunkDescChunkOffset is the schema descriptor for chunk_offset field.
	recvchunkDescChunkOffset := recvchunkFields[2].Descriptor()
	// recvchunk.DefaultChunkOffset holds the default value on creation for the chunk_offset field.
	recvchunk.DefaultChunkOffset = recvchunkDescChunkOffset.Default.(int64)
	// recvchunkDescChunkSize is the schema descriptor for chunk_size field.
	recvchunkDescChunkSize := recvchunkFields[3].Descriptor()
	// recvchunk.DefaultChunkSize holds the default value on creation for the chunk_size field.
	recvchunk.DefaultChunkSize = recvchunkDescChunkSize.Default.(int)
	// recvchunkDescUpdatedAt is the schema descriptor for updated_at field.
	recvchunkDescUpdatedAt := recvchunkFields[4].Descriptor()
	// recvchunk.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	recvchunk.DefaultUpdatedAt = recvchunkDescUpdatedAt.Default.(func() time.Time)
	// recvchunk.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	recvchunk.UpdateDefaultUpdatedAt = recvchunkDescUpdatedAt.UpdateDefault.(func() time.Time)
	// recvchunkDescCreatedAt is the schema descriptor for created_at field.
	recvchunkDescCreatedAt := recvchunkFields[5].Descriptor()
	// recvchunk.DefaultCreatedAt holds the default value on creation for the created_at field.
	recvchunk.DefaultCreatedAt = recvchunkDescCreatedAt.Default.(func() time.Time)
	recvfileFields := schema.RecvFile{}.Fields()
	_ = recvfileFields
	// recvfileDescTaskID is the schema descriptor for task_id field.
	recvfileDescTaskID := recvfileFields[0].Descriptor()
	// recvfile.TaskIDValidator is a validator for the "task_id" field. It is called by the builders before save.
	recvfile.TaskIDValidator = func() func(string) error {
		validators := recvfileDescTaskID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(task_id string) error {
			for _, fn := range fns {
				if err := fn(task_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// recvfileDescTaskName is the schema descriptor for task_name field.
	recvfileDescTaskName := recvfileFields[1].Descriptor()
	// recvfile.TaskNameValidator is a validator for the "task_name" field. It is called by the builders before save.
	recvfile.TaskNameValidator = recvfileDescTaskName.Validators[0].(func(string) error)
	// recvfileDescFilePathSave is the schema descriptor for file_path_save field.
	recvfileDescFilePathSave := recvfileFields[2].Descriptor()
	// recvfile.FilePathSaveValidator is a validator for the "file_path_save" field. It is called by the builders before save.
	recvfile.FilePathSaveValidator = recvfileDescFilePathSave.Validators[0].(func(string) error)
	// recvfileDescFilePathOrigin is the schema descriptor for file_path_origin field.
	recvfileDescFilePathOrigin := recvfileFields[3].Descriptor()
	// recvfile.FilePathOriginValidator is a validator for the "file_path_origin" field. It is called by the builders before save.
	recvfile.FilePathOriginValidator = recvfileDescFilePathOrigin.Validators[0].(func(string) error)
	// recvfileDescFileID is the schema descriptor for file_id field.
	recvfileDescFileID := recvfileFields[4].Descriptor()
	// recvfile.FileIDValidator is a validator for the "file_id" field. It is called by the builders before save.
	recvfile.FileIDValidator = func() func(string) error {
		validators := recvfileDescFileID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(file_id string) error {
			for _, fn := range fns {
				if err := fn(file_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// recvfileDescFileSize is the schema descriptor for file_size field.
	recvfileDescFileSize := recvfileFields[5].Descriptor()
	// recvfile.FileSizeValidator is a validator for the "file_size" field. It is called by the builders before save.
	recvfile.FileSizeValidator = recvfileDescFileSize.Validators[0].(func(int64) error)
	// recvfileDescChunkNumTotal is the schema descriptor for chunk_num_total field.
	recvfileDescChunkNumTotal := recvfileFields[6].Descriptor()
	// recvfile.ChunkNumTotalValidator is a validator for the "chunk_num_total" field. It is called by the builders before save.
	recvfile.ChunkNumTotalValidator = recvfileDescChunkNumTotal.Validators[0].(func(int) error)
	// recvfileDescChunkNumRecved is the schema descriptor for chunk_num_recved field.
	recvfileDescChunkNumRecved := recvfileFields[7].Descriptor()
	// recvfile.DefaultChunkNumRecved holds the default value on creation for the chunk_num_recved field.
	recvfile.DefaultChunkNumRecved = recvfileDescChunkNumRecved.Default.(int)
	// recvfileDescStatus is the schema descriptor for status field.
	recvfileDescStatus := recvfileFields[8].Descriptor()
	// recvfile.DefaultStatus holds the default value on creation for the status field.
	recvfile.DefaultStatus = recvfileDescStatus.Default.(int)
	// recvfileDescUpdatedAt is the schema descriptor for updated_at field.
	recvfileDescUpdatedAt := recvfileFields[9].Descriptor()
	// recvfile.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	recvfile.DefaultUpdatedAt = recvfileDescUpdatedAt.Default.(func() time.Time)
	// recvfile.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	recvfile.UpdateDefaultUpdatedAt = recvfileDescUpdatedAt.UpdateDefault.(func() time.Time)
	// recvfileDescCreatedAt is the schema descriptor for created_at field.
	recvfileDescCreatedAt := recvfileFields[10].Descriptor()
	// recvfile.DefaultCreatedAt holds the default value on creation for the created_at field.
	recvfile.DefaultCreatedAt = recvfileDescCreatedAt.Default.(func() time.Time)
	sendchunkFields := schema.SendChunk{}.Fields()
	_ = sendchunkFields
	// sendchunkDescChunkIndex is the schema descriptor for chunk_index field.
	sendchunkDescChunkIndex := sendchunkFields[1].Descriptor()
	// sendchunk.DefaultChunkIndex holds the default value on creation for the chunk_index field.
	sendchunk.DefaultChunkIndex = sendchunkDescChunkIndex.Default.(int)
	// sendchunkDescChunkOffset is the schema descriptor for chunk_offset field.
	sendchunkDescChunkOffset := sendchunkFields[2].Descriptor()
	// sendchunk.DefaultChunkOffset holds the default value on creation for the chunk_offset field.
	sendchunk.DefaultChunkOffset = sendchunkDescChunkOffset.Default.(int64)
	// sendchunkDescChunkSize is the schema descriptor for chunk_size field.
	sendchunkDescChunkSize := sendchunkFields[3].Descriptor()
	// sendchunk.DefaultChunkSize holds the default value on creation for the chunk_size field.
	sendchunk.DefaultChunkSize = sendchunkDescChunkSize.Default.(int)
	// sendchunkDescUpdatedAt is the schema descriptor for updated_at field.
	sendchunkDescUpdatedAt := sendchunkFields[4].Descriptor()
	// sendchunk.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sendchunk.DefaultUpdatedAt = sendchunkDescUpdatedAt.Default.(func() time.Time)
	// sendchunk.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sendchunk.UpdateDefaultUpdatedAt = sendchunkDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sendchunkDescCreatedAt is the schema descriptor for created_at field.
	sendchunkDescCreatedAt := sendchunkFields[5].Descriptor()
	// sendchunk.DefaultCreatedAt holds the default value on creation for the created_at field.
	sendchunk.DefaultCreatedAt = sendchunkDescCreatedAt.Default.(func() time.Time)
	sendfileFields := schema.SendFile{}.Fields()
	_ = sendfileFields
	// sendfileDescTaskID is the schema descriptor for task_id field.
	sendfileDescTaskID := sendfileFields[0].Descriptor()
	// sendfile.TaskIDValidator is a validator for the "task_id" field. It is called by the builders before save.
	sendfile.TaskIDValidator = func() func(string) error {
		validators := sendfileDescTaskID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(task_id string) error {
			for _, fn := range fns {
				if err := fn(task_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sendfileDescFilePath is the schema descriptor for file_path field.
	sendfileDescFilePath := sendfileFields[1].Descriptor()
	// sendfile.FilePathValidator is a validator for the "file_path" field. It is called by the builders before save.
	sendfile.FilePathValidator = sendfileDescFilePath.Validators[0].(func(string) error)
	// sendfileDescFileID is the schema descriptor for file_id field.
	sendfileDescFileID := sendfileFields[2].Descriptor()
	// sendfile.FileIDValidator is a validator for the "file_id" field. It is called by the builders before save.
	sendfile.FileIDValidator = func() func(string) error {
		validators := sendfileDescFileID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(file_id string) error {
			for _, fn := range fns {
				if err := fn(file_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sendfileDescFileSize is the schema descriptor for file_size field.
	sendfileDescFileSize := sendfileFields[3].Descriptor()
	// sendfile.FileSizeValidator is a validator for the "file_size" field. It is called by the builders before save.
	sendfile.FileSizeValidator = sendfileDescFileSize.Validators[0].(func(int64) error)
	// sendfileDescChunkNumTotal is the schema descriptor for chunk_num_total field.
	sendfileDescChunkNumTotal := sendfileFields[4].Descriptor()
	// sendfile.ChunkNumTotalValidator is a validator for the "chunk_num_total" field. It is called by the builders before save.
	sendfile.ChunkNumTotalValidator = sendfileDescChunkNumTotal.Validators[0].(func(int) error)
	// sendfileDescChunkNumSended is the schema descriptor for chunk_num_sended field.
	sendfileDescChunkNumSended := sendfileFields[5].Descriptor()
	// sendfile.DefaultChunkNumSended holds the default value on creation for the chunk_num_sended field.
	sendfile.DefaultChunkNumSended = sendfileDescChunkNumSended.Default.(int)
	// sendfileDescStatus is the schema descriptor for status field.
	sendfileDescStatus := sendfileFields[6].Descriptor()
	// sendfile.DefaultStatus holds the default value on creation for the status field.
	sendfile.DefaultStatus = sendfileDescStatus.Default.(int)
	// sendfileDescUpdatedAt is the schema descriptor for updated_at field.
	sendfileDescUpdatedAt := sendfileFields[7].Descriptor()
	// sendfile.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sendfile.DefaultUpdatedAt = sendfileDescUpdatedAt.Default.(func() time.Time)
	// sendfile.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sendfile.UpdateDefaultUpdatedAt = sendfileDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sendfileDescCreatedAt is the schema descriptor for created_at field.
	sendfileDescCreatedAt := sendfileFields[8].Descriptor()
	// sendfile.DefaultCreatedAt holds the default value on creation for the created_at field.
	sendfile.DefaultCreatedAt = sendfileDescCreatedAt.Default.(func() time.Time)
}
