// Code generated by MockGen. DO NOT EDIT.
// Source: ./uuid.go
//
// Generated by this command:
//
//	mockgen -destination=mock_uuid.go -package=uuid -source=./uuid.go UUID
//

// Package uuid is a generated GoMock package.
package uuid

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUUID is a mock of UUID interface.
type MockUUID struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDMockRecorder
	isgomock struct{}
}

// MockUUIDMockRecorder is the mock recorder for MockUUID.
type MockUUIDMockRecorder struct {
	mock *MockUUID
}

// NewMockUUID creates a new mock instance.
func NewMockUUID(ctrl *gomock.Controller) *MockUUID {
	mock := &MockUUID{ctrl: ctrl}
	mock.recorder = &MockUUIDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUID) EXPECT() *MockUUIDMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockUUID) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockUUIDMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockUUID)(nil).Generate))
}
